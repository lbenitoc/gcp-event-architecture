 
name: Deploy Cloud Function with Terraform

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]

env:
  PROJECT_ID: test-gcp-465402
  TERRAFORM_VERSION: 1.5.0

jobs:
  terraform-plan:
    name: Terraform Plan
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      
    - name: Terraform Plan
      working-directory: ./terraform
      run: terraform plan -var-file="environments/dev/terraform.tfvars"

  terraform-apply:
    name: Terraform Apply
    runs-on: ubuntu-latest
    if: github.ref == 'refs/heads/master' && github.event_name == 'push'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v3
      
    - name: Setup Terraform
      uses: hashicorp/setup-terraform@v2
      with:
        terraform_version: ${{ env.TERRAFORM_VERSION }}
        
    - name: Authenticate to Google Cloud
      uses: google-github-actions/auth@v1
      with:
        credentials_json: ${{ secrets.GCP_SA_KEY }}
        
    - name: Setup Google Cloud SDK
      uses: google-github-actions/setup-gcloud@v1
      
    - name: Terraform Init
      working-directory: ./terraform
      run: terraform init
      
    - name: Terraform Apply
      working-directory: ./terraform
      run: terraform apply -auto-approve -var-file="environments/dev/terraform.tfvars"
      
    - name: Output deployment info
      working-directory: ./terraform
      run: terraform output